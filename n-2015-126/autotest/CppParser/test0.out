Upp {
	NAMESPACE, name: Upp, qitem: namespace Upp, qtype: , qptype: , natural: namespace Upp, line 1, using 
	FUNCTIONTEMPLATE, name: Single, qitem: Single(), qtype: T, qptype: , natural: template <class T> T& Single(), line 13, using 
}
Upp::Foo {
	STRUCT, name: Foo, qitem: struct, qtype: Upp::Foo, qptype: , natural: struct Foo, line 2, using 
}
Upp::String {
	STRUCT, name: String, qitem: struct, qtype: Upp::String, qptype: , natural: struct String, line 3, using 
	INSTANCEFUNCTION, name: Bar, qitem: Bar(), qtype: Upp::Foo, qptype: , natural: Foo Bar(), line 4, using 
	INSTANCEVARIABLE, name: bar, qitem: bar, qtype: Upp::Foo, qptype: , natural: Foo bar, line 5, using 
}
Upp::One {
	STRUCTTEMPLATE, name: One, qitem: class, qtype: Upp::One, qptype: , natural: template <class T> class One, line 8, using 
	INSTANCEFUNCTION, name: operator->, qitem: operator->(), qtype: 0, qptype: , natural: T *operator->(), line 10, using 
}
Upp::Array {
	STRUCTTEMPLATE, name: Array, qitem: struct, qtype: Upp::Array, qptype: , natural: template <class T> struct Array, line 16, using 
	INSTANCEFUNCTION, name: operator[], qitem: operator[](int), qtype: 0, qptype: , natural: T& operator[](int i), line 18, using 
	INSTANCEFUNCTION, name: operator(), qitem: operator()(int), qtype: Upp::Foo, qptype: , natural: Foo operator()(int i), line 19, using 
}
ResourceCache {
	STRUCT, name: ResourceCache, qitem: class, qtype: ResourceCache, qptype: , natural: class ResourceCache, line 26, using Upp
	INSTANCEFUNCTION, name: GetAttrs, qitem: GetAttrs(), qtype: ValueMap, qptype: , natural: ValueMap GetAttrs(), line 28, using Upp
	CLASSFUNCTION, name: The, qitem: The(), qtype: ResourceCache, qptype: , natural: ResourceCache& The(), line 30, using Upp
}
<globals> {
	FUNCTION, name: Expressions, qitem: Expressions(), qtype: , qptype: , natural: void Expressions(), line 33, using Upp
}
<locals> {
str1 Upp::String, line: 35
str2 Upp::String, line: 36
s1 Upp::String, line: 38
s2 Upp::String, line: 39
one Upp::One<Upp::String>, line: 41
one1 Upp::Foo, line: 42
one2 Upp::Foo, line: 43
single Upp::String, line: 45
single1 Upp::Foo, line: 46
single2 Upp::Foo, line: 47
a Upp::Array<Upp::String>, line: 49
a1 Upp::String, line: 50
a2 Upp::Foo, line: 51
a3 Upp::Foo, line: 52
th ResourceCache, line: 54
}